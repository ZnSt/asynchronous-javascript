{"mappings":"AAAA,SAAAA,gBAAAC,EAAAC,G,uXAAMC,KAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBAGpCG,MAuCG,W,sBAvCGA,EACQC,G,IAAAC,EAAAD,EAAEC,O,wBACXC,KAAKC,WAAa,KAAQD,KAAKE,UAAW,EAASF,KAAKD,OAASA,E,wBAGpEI,IAAA,Q,MAAA,W,WACE,IAAIH,KAAKE,SAAT,CAGAF,KAAKE,UAAW,EAChB,IAAME,EAAYC,KAAKC,MACvBN,KAAKC,WAAaM,aAAY,WAC5B,IACMC,EADcH,KAAKC,MACOF,EAC1BK,EAAOC,EAAKC,kBAAkBH,GACpCE,EAAKX,OAAOU,KACX,Q,CAGLN,IAAA,O,MAAA,WACES,cAAcZ,KAAKC,YACnBD,KAAKE,UAAW,I,CAGlBC,IAAA,oB,MAAA,SAAkBM,GAOhB,MAAO,CAAEI,MANKb,KAAKc,IACjBC,KAAKC,MAAMP,EAAS,MAAyB,OAK/BQ,KAHHjB,KAAKc,IAAIC,KAAKC,MAAMP,EAAS,KAAoB,MAGxCS,KAFTlB,KAAKc,IAAIC,KAAKC,MAAMP,EAAS,IAAc,S,CAK1DN,IAAA,M,MAAA,SAAIgB,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,S,EAIlC,GAAGC,MAAQ,IAAIzB,MAAM,CACtBE,OAAQwB,kBAWV,SAASA,gBAAgBzB,G,IAAEe,EAAFf,EAAEe,MAAOI,EAATnB,EAASmB,KAAMC,EAAfpB,EAAeoB,KACtC3B,KAAKK,UAAU4B,YAAc,GAAaC,OAAVZ,EAAM,MAAaY,OAATR,EAAK,MAASQ,OAALP,GATrD3B,KAAKC,SAASkC,iBAAiB,SAAS,WACtCJ,MAAMK,WAGRpC,KAAKI,QAAQ+B,iBAAiB,SAAS,WACrCJ,MAAMM,UAOR,IAAMC,IAAM,CACVC,IAAK,W,OAAMC,QAAQC,IAAGC,SAGxBJ,IAAIC","sources":["src/js/timer.js"],"sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockFace: document.querySelector('.js-clockface'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    (this.intervalId = null), (this.isActive = false), (this.onTick = onTick);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n    const startTime = Date.now();\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const time = this.getTimeComponents(deltaTime);\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n  }\n\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockFace,\n});\n\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n});\n\nrefs.stopBtn.addEventListener('click', () => {\n  timer.stop();\n});\n\nfunction updateClockFace({ hours, mins, secs }) {\n  refs.clockFace.textContent = `${hours}: ${mins}: ${secs}`;\n}\n\nconst obj = {\n  foo: () => console.log(this),\n};\n\nobj.foo();\n"],"names":["_classCallCheck","instance","Constructor","refs","startBtn","document","querySelector","stopBtn","clockFace","Timer","param","onTick","this","intervalId","isActive","key","startTime","Date","now","setInterval","deltaTime","time","_this1","getTimeComponents","clearInterval","hours","pad","Math","floor","mins","secs","value","String","padStart","timer","updateClockFace","textContent","concat","addEventListener","start","stop","obj","foo","console","log","_this"],"version":3,"file":"timer.8bc67c80.js.map"}